/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LineItems".
 */
export type LineItems =
  | {
      lineItem: LineItem;
      id?: string | null;
    }[]
  | null;
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductVariant".
 */
export type ProductVariant =
  | {
      options: string[];
      sku: string;
      price: number;
      /**
       * Shows or hides the product from the shop. Default is true.
       */
      productActive: boolean;
      /**
       * Allows the product to be sold online. Default is true.
       */
      soldOnline: boolean;
      /**
       * Check this if you want to track inventory for this product
       */
      enableInventory?: boolean | null;
      /**
       * Define stock for this product. A stock of 0 disables checkout for this product.
       */
      inventory?: number | null;
      info?:
        | {
            [k: string]: unknown;
          }
        | unknown[]
        | string
        | number
        | boolean
        | null;
      images?:
        | {
            image?: (number | null) | Media;
            id?: string | null;
          }[]
        | null;
      id?: string | null;
    }[]
  | null;
/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    'blog-categories': BlogCategory;
    media: Media;
    users: User;
    cart: Cart;
    orders: Order;
    products: Product;
    pages: Page;
    posts: Post;
    'product-categories': ProductCategory;
    'product-collections': ProductCollection;
    brands: Brand;
    customers: Customer;
    testimonials: Testimonial;
    spas: Spa;
    galleries: Gallery;
    'form-submissions': FormSubmission;
    'shipping-options': ShippingOption;
    'product-reviews': ProductReview;
    redirects: Redirect;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {
    products: {
      reviews: 'product-reviews';
    };
    'product-categories': {
      children: 'product-categories';
      products: 'products';
    };
    'product-collections': {
      products: 'products';
    };
    brands: {
      products: 'products';
    };
  };
  collectionsSelect: {
    'blog-categories': BlogCategoriesSelect<false> | BlogCategoriesSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    cart: CartSelect<false> | CartSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    'product-categories': ProductCategoriesSelect<false> | ProductCategoriesSelect<true>;
    'product-collections': ProductCollectionsSelect<false> | ProductCollectionsSelect<true>;
    brands: BrandsSelect<false> | BrandsSelect<true>;
    customers: CustomersSelect<false> | CustomersSelect<true>;
    testimonials: TestimonialsSelect<false> | TestimonialsSelect<true>;
    spas: SpasSelect<false> | SpasSelect<true>;
    galleries: GalleriesSelect<false> | GalleriesSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    'shipping-options': ShippingOptionsSelect<false> | ShippingOptionsSelect<true>;
    'product-reviews': ProductReviewsSelect<false> | ProductReviewsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    'site-settings': Settings;
    'shop-settings': ShopSetting;
    header: Header;
    footer: Footer;
    'store-hours': StoreHours;
  };
  globalsSelect: {
    'site-settings': SiteSettingsSelect<false> | SiteSettingsSelect<true>;
    'shop-settings': ShopSettingsSelect<false> | ShopSettingsSelect<true>;
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    'store-hours': StoreHoursSelect<false> | StoreHoursSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog-categories".
 */
export interface BlogCategory {
  id: number;
  title: string;
  showInFilter?: boolean | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  firstName?: string | null;
  lastName?: string | null;
  name?: string | null;
  phone?: string | null;
  roles?: ('admin' | 'customer')[] | null;
  customer?: (number | null) | Customer;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers".
 */
export interface Customer {
  id: number;
  email: string;
  /**
   * Whether the customer is a registered user
   */
  has_account?: boolean | null;
  account?: (number | null) | User;
  stripeCustomerID?: string | null;
  cart?: (number | null) | Cart;
  billing_addresses?:
    | {
        address: Address;
        id?: string | null;
      }[]
    | null;
  shipping_addresses?:
    | {
        address: Address;
        id?: string | null;
      }[]
    | null;
  orders?: (number | Order)[] | null;
  /**
   * An optional key-value map with additional details
   */
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cart".
 */
export interface Cart {
  id: number;
  lineItems?: LineItems;
  customer?: (number | null) | Customer;
  payment_intent?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  checkout_session?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taxCalculationId?: string | null;
  completed_at?: string | null;
  payment_authorized_at?: string | null;
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  payment?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  discount_total?: number | null;
  subtotal?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LineItem".
 */
export interface LineItem {
  product: number | Product;
  isVariant?: boolean | null;
  variantOptions?:
    | {
        key?: {
          slug?: string | null;
          label?: string | null;
        };
        value?: {
          slug?: string | null;
          label?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  sku: string;
  price: number;
  quantity: number;
  thumbnail?: (number | null) | Media;
  url?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  slug?: string | null;
  slugLock?: boolean | null;
  title: string;
  description?: string | null;
  relatedProducts?: (number | Product)[] | null;
  moreInfo?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  publishedOn?: string | null;
  /**
   * Check this if the product has multiple variants
   */
  enableVariants?: boolean | null;
  baseProduct?: {
    sku: string;
    /**
     * Shows or hides the product from the shop. Default is true.
     */
    productActive: boolean;
    /**
     * Allows the product to be sold online. Default is true.
     */
    soldOnline: boolean;
    /**
     * Check this if you want to track inventory for this product
     */
    enableInventory?: boolean | null;
    /**
     * Define stock for this product. A stock of 0 disables checkout for this product.
     */
    inventory?: number | null;
    /**
     * Define the price for this product.
     */
    price?: number | null;
    images?:
      | {
          image?: (number | null) | Media;
          id?: string | null;
        }[]
      | null;
  };
  variants?: {
    options?:
      | {
          label: string;
          slug: string;
          values?:
            | {
                label: string;
                slug: string;
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
    variantProducts?: ProductVariant;
  };
  brand?: (number | Brand)[] | null;
  collections?: (number | ProductCollection)[] | null;
  categories?: (number | ProductCategory)[] | null;
  /**
   * Select which equipment types this product is compatible with
   */
  compatibility?: ('swimspa' | 'hottub' | 'pool')[] | null;
  /**
   * Minimum price for this product
   */
  priceMin?: number | null;
  /**
   * Maximum price for this product
   */
  priceMax?: number | null;
  reviews?: {
    docs?: (number | ProductReview)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands".
 */
export interface Brand {
  id: number;
  slug?: string | null;
  slugLock?: boolean | null;
  name: string;
  products?: {
    docs?: (number | Product)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-collections".
 */
export interface ProductCollection {
  id: number;
  slug?: string | null;
  slugLock?: boolean | null;
  title: string;
  /**
   * The collection type determines how the products are displayed.
   */
  collectionType: 'seasonal' | 'promotional' | 'curated';
  description?: string | null;
  priority?: number | null;
  startDate?: string | null;
  endDate?: string | null;
  publishedOn?: string | null;
  products?: {
    docs?: (number | Product)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-categories".
 */
export interface ProductCategory {
  id: number;
  slug?: string | null;
  slugLock?: boolean | null;
  /**
   * The full URL path for this category, computed from the parent chain (e.g.: electronics/cameras/dslr).
   */
  fullSlug?: string | null;
  title: string;
  description?: string | null;
  /**
   * Select a parent category (leave empty for root categories)
   */
  parent?: (number | null) | ProductCategory;
  /**
   * Indicates if the category is a leaf (i.e. has no children). Products can only be assigned to leaf categories.
   */
  isLeaf?: boolean | null;
  children?: {
    docs?: (number | ProductCategory)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  products?: {
    docs?: (number | Product)[];
    hasNextPage?: boolean;
    totalDocs?: number;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-reviews".
 */
export interface ProductReview {
  id: number;
  title: string;
  rating: number;
  review: string;
  isVerifiedPurchase?: boolean | null;
  images?: (number | Media)[] | null;
  reviewer?: (number | null) | Customer;
  product?: (number | null) | Product;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Address".
 */
export interface Address {
  first_name?: string | null;
  last_name?: string | null;
  company?: string | null;
  line_1: string;
  line_2?: string | null;
  city: string;
  country: string;
  state: string;
  postal_code: string;
  phone: string;
  email: string;
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: number;
  orderNumber: string;
  status?:
    | (
        | 'canceled'
        | 'processing'
        | 'requires_action'
        | 'requires_capture'
        | 'requires_confirmation'
        | 'requires_payment_method'
        | 'succeeded'
      )
    | null;
  orderedBy?: (number | null) | Customer;
  stripePaymentIntentID?: string | null;
  shippingRate?: {
    displayName?: string | null;
    rate?: number | null;
  };
  total: number;
  taxTotal: number;
  currency: string;
  lineItems?: LineItems;
  paymentIntent?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  slug?: string | null;
  slugLock?: boolean | null;
  title: string;
  hero: {
    type: 'none' | 'standard' | 'slider' | 'highImpact' | 'mediumImpact' | 'lowImpact' | 'parallax';
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?: {
              relationTo: 'pages';
              value: number | Page;
            } | null;
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    title?: string | null;
    subtitle?: string | null;
    size?: ('large' | 'medium' | 'small') | null;
    background?: (number | null) | Media;
    media?: (number | null) | Media;
    slides?:
      | {
          pretitle?: string | null;
          title?: string | null;
          description?: string | null;
          links?:
            | {
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?: {
                    relationTo: 'pages';
                    value: number | Page;
                  } | null;
                  url?: string | null;
                  label: string;
                  /**
                   * Choose how the link should be rendered.
                   */
                  appearance?: ('default' | 'outline') | null;
                };
                id?: string | null;
              }[]
            | null;
          background?: (number | null) | Media;
          id?: string | null;
        }[]
      | null;
    autoplay?: boolean | null;
    delay?: number | null;
    fade?: boolean | null;
  };
  layout?:
    | (
        | ArchiveBlock
        | BannerBlock
        | CallToActionBlock
        | CodeBlock
        | ContentBlock
        | FormBlock
        | MediaBlock
        | ServicesBlock
        | TestimonialsBlock
        | ContactBlock
        | TypographyBlock
        | LatestPostsBlock
        | CardBlock
        | {
            gridStyle: 'basic' | 'masonry' | 'responsive';
            /**
             * Number of columns in the grid
             */
            columns?: number | null;
            /**
             * Gap between grid items in pixels
             */
            gap?: number | null;
            content?:
              | {
                  contentType?: ('blocks' | 'richText') | null;
                  richText?: {
                    root: {
                      type: string;
                      children: {
                        type: string;
                        version: number;
                        [k: string]: unknown;
                      }[];
                      direction: ('ltr' | 'rtl') | null;
                      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                      indent: number;
                      version: number;
                    };
                    [k: string]: unknown;
                  } | null;
                  blocks?:
                    | (
                        | ArchiveBlock
                        | BannerBlock
                        | CallToActionBlock
                        | CodeBlock
                        | MediaBlock
                        | TypographyBlock
                        | CardBlock
                      )[]
                    | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'grid';
          }
        | {
            preTitle: string;
            title: string;
            body?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            /**
             * Select up to 3 spas to feature
             */
            spas: (number | Spa)[];
            /**
             * Link to the shop hot tubs page
             */
            link: {
              type?: ('reference' | 'custom') | null;
              newTab?: boolean | null;
              reference?: {
                relationTo: 'pages';
                value: number | Page;
              } | null;
              url?: string | null;
              label: string;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: ('default' | 'outline') | null;
            };
            id?: string | null;
            blockName?: string | null;
            blockType: 'featured-spas';
          }
      )[]
    | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (number | BlogCategory)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: number | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * Blog posts
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (number | Post)[] | null;
  categories?: (number | BlogCategory)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  /**
   * Sets the gap between columns horizontally
   */
  gapX?: number | null;
  /**
   * Sets the gap between columns vertically
   */
  gapY?: number | null;
  columns?:
    | {
        type?: ('blocks' | 'richText') | null;
        /**
         * Sets the width of the column
         */
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        /**
         * Sets the height of the column in pixels, leave blank for auto
         */
        height?: number | null;
        /**
         * Aligns horizontal items along the y-axis
         */
        align?: ('start' | 'center' | 'end') | null;
        enableLink?: boolean | null;
        enableBackgroundImage?: boolean | null;
        backgroundImage?: (number | null) | Media;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        blocks?:
          | (
              | ArchiveBlock
              | BannerBlock
              | CallToActionBlock
              | CodeBlock
              | MediaBlock
              | TypographyBlock
              | CardBlock
              | {
                  gridStyle: 'basic' | 'masonry' | 'responsive';
                  /**
                   * Number of columns in the grid
                   */
                  columns?: number | null;
                  /**
                   * Gap between grid items in pixels
                   */
                  gap?: number | null;
                  content?:
                    | {
                        contentType?: ('blocks' | 'richText') | null;
                        richText?: {
                          root: {
                            type: string;
                            children: {
                              type: string;
                              version: number;
                              [k: string]: unknown;
                            }[];
                            direction: ('ltr' | 'rtl') | null;
                            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                            indent: number;
                            version: number;
                          };
                          [k: string]: unknown;
                        } | null;
                        blocks?:
                          | (
                              | ArchiveBlock
                              | BannerBlock
                              | CallToActionBlock
                              | CodeBlock
                              | MediaBlock
                              | TypographyBlock
                              | CardBlock
                            )[]
                          | null;
                        id?: string | null;
                      }[]
                    | null;
                  id?: string | null;
                  blockName?: string | null;
                  blockType: 'grid';
                }
            )[]
          | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  position?: ('default' | 'fullscreen') | null;
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TypographyBlock".
 */
export interface TypographyBlock {
  type?: ('sub-title-body' | 'title-body' | 'title' | 'subtitle' | 'body') | null;
  enableLinks?: boolean | null;
  align?: ('left' | 'center' | 'right') | null;
  title?: string | null;
  subTitle?: string | null;
  body?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'secondary' | 'none') | null;
        };
        id?: string | null;
      }[]
    | null;
  titleFontColor?: string | null;
  subtitleFontColor?: string | null;
  bodyFontColor?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'typography';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CardBlock".
 */
export interface CardBlock {
  type?: ('icon' | 'product' | 'service') | null;
  icon?:
    | (
        | 'moon'
        | 'heart-eyes'
        | 'swimming'
        | 'walking'
        | 'wave'
        | 'theater-masks'
        | 'heart'
        | 'sleeping'
        | 'stress'
        | 'aches'
        | 'sick'
      )
    | null;
  title?: string | null;
  description?: string | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'card';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  enableIntro?: boolean | null;
  preTitle?: string | null;
  title?: string | null;
  body?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'form';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ServicesBlock".
 */
export interface ServicesBlock {
  title: string;
  subtitle?: string | null;
  body?: string | null;
  link: {
    type?: ('reference' | 'custom') | null;
    newTab?: boolean | null;
    reference?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    url?: string | null;
    label: string;
    /**
     * Choose how the link should be rendered.
     */
    appearance?: ('default' | 'outline') | null;
  };
  offerings?:
    | {
        title: string;
        description: string;
        image: number | Media;
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'services';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialsBlock".
 */
export interface TestimonialsBlock {
  title?: string | null;
  body?: string | null;
  link: {
    type?: ('reference' | 'custom') | null;
    newTab?: boolean | null;
    reference?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    url?: string | null;
    label: string;
    /**
     * Choose how the link should be rendered.
     */
    appearance?: ('default' | 'outline') | null;
  };
  populateBy?: ('collection' | 'selection') | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'testimonials';
        value: number | Testimonial;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'testimonials';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials".
 */
export interface Testimonial {
  id: number;
  title: string;
  content: string;
  author: string;
  rating: number;
  date: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContactBlock".
 */
export interface ContactBlock {
  title: string;
  message: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'contact';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LatestPostsBlock".
 */
export interface LatestPostsBlock {
  title: string;
  subtitle?: string | null;
  body?: string | null;
  link: {
    type?: ('reference' | 'custom') | null;
    newTab?: boolean | null;
    reference?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    url?: string | null;
    label: string;
    /**
     * Choose how the link should be rendered.
     */
    appearance?: ('default' | 'outline') | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'latest-posts';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "spas".
 */
export interface Spa {
  id: number;
  slug?: string | null;
  slugLock?: boolean | null;
  type: 'hot-tub' | 'swim-spa';
  hotTubCollection?: ('self-cleaning' | 'serenity') | null;
  swimSpaCollection?: ('executive-trainer' | 'executive-sport' | 'aqua-trainer' | 'aqua-sport' | 'aqua-play') | null;
  title: string;
  startingPrice?: number | null;
  modelYear?: number | null;
  model?: string | null;
  description?: string | null;
  seatingDesign?: string | null;
  seating?: string | null;
  jets?: string | null;
  volume?: string | null;
  swimSystem?: string | null;
  sizeCategory?: string | null;
  energyEfficiency?: number | null;
  hydroGuide?: string | null;
  dimensions?: string | null;
  height?: string | null;
  weightFull?: string | null;
  weightEmpty?: string | null;
  swimArea?: string | null;
  jetPumps?: string | null;
  interiorLighting?: string | null;
  exteriorLighting?: string | null;
  waterFalls?: string | null;
  selfCleaning?: boolean | null;
  circulationPump?: boolean | null;
  automatedWellness?: boolean | null;
  pureWaterSystem?: ('optional' | 'standard') | null;
  ezZonePure?: ('optional' | 'standard') | null;
  oasisPackage?: ('optional' | 'not-available') | null;
  hydroFlex?: ('optional' | 'not-available') | null;
  iCommand?: ('optional' | 'not-available') | null;
  northernFalls?: ('optional' | 'not-available') | null;
  chromatherapy?: ('optional' | 'not-available') | null;
  heater?: string | null;
  electrical?: string | null;
  warranty?: string | null;
  thumbnail?: (number | null) | Media;
  topdown?: (number | null) | Media;
  threeDModel?: string | null;
  detailsLink?: string | null;
  quoteLink?: string | null;
  financingLink?: string | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "galleries".
 */
export interface Gallery {
  id: number;
  hero: {
    type: 'none' | 'standard' | 'slider' | 'highImpact' | 'mediumImpact' | 'lowImpact' | 'parallax';
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?: {
              relationTo: 'pages';
              value: number | Page;
            } | null;
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    title?: string | null;
    subtitle?: string | null;
    size?: ('large' | 'medium' | 'small') | null;
    background?: (number | null) | Media;
    media?: (number | null) | Media;
    slides?:
      | {
          pretitle?: string | null;
          title?: string | null;
          description?: string | null;
          links?:
            | {
                link: {
                  type?: ('reference' | 'custom') | null;
                  newTab?: boolean | null;
                  reference?: {
                    relationTo: 'pages';
                    value: number | Page;
                  } | null;
                  url?: string | null;
                  label: string;
                  /**
                   * Choose how the link should be rendered.
                   */
                  appearance?: ('default' | 'outline') | null;
                };
                id?: string | null;
              }[]
            | null;
          background?: (number | null) | Media;
          id?: string | null;
        }[]
      | null;
    autoplay?: boolean | null;
    delay?: number | null;
    fade?: boolean | null;
  };
  title?: string | null;
  subtitle?: string | null;
  description?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  images?: (number | Media)[] | null;
  showCaptions?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  submissionType: 'contact';
  firstName: string;
  lastName: string;
  email: string;
  phone: string;
  postalCode: string;
  interestedIn: {
    value?: string | null;
    id?: string | null;
  }[];
  message: string;
  subscribeToMailingList?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "shipping-options".
 */
export interface ShippingOption {
  id: number;
  name: string;
  type: 'pickup' | 'shipping';
  shippingRules?: {
    baseRate: number;
    freeShippingThreshold?: number | null;
    regions?:
      | {
          name: string;
          /**
           * Enter a regex pattern to match postal codes. Example: For GTA use: ^[MmLl][0-9][A-Za-z]
           */
          postalCodePattern: string;
          id?: string | null;
        }[]
      | null;
  };
  pickupLocation?: Address;
  isActive: boolean;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'blog-categories';
        value: number | BlogCategory;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'cart';
        value: number | Cart;
      } | null)
    | ({
        relationTo: 'orders';
        value: number | Order;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'product-categories';
        value: number | ProductCategory;
      } | null)
    | ({
        relationTo: 'product-collections';
        value: number | ProductCollection;
      } | null)
    | ({
        relationTo: 'brands';
        value: number | Brand;
      } | null)
    | ({
        relationTo: 'customers';
        value: number | Customer;
      } | null)
    | ({
        relationTo: 'testimonials';
        value: number | Testimonial;
      } | null)
    | ({
        relationTo: 'spas';
        value: number | Spa;
      } | null)
    | ({
        relationTo: 'galleries';
        value: number | Gallery;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'shipping-options';
        value: number | ShippingOption;
      } | null)
    | ({
        relationTo: 'product-reviews';
        value: number | ProductReview;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blog-categories_select".
 */
export interface BlogCategoriesSelect<T extends boolean = true> {
  title?: T;
  showInFilter?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  name?: T;
  phone?: T;
  roles?: T;
  customer?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "cart_select".
 */
export interface CartSelect<T extends boolean = true> {
  lineItems?: T | LineItemsSelect<T>;
  customer?: T;
  payment_intent?: T;
  checkout_session?: T;
  taxCalculationId?: T;
  completed_at?: T;
  payment_authorized_at?: T;
  metadata?: T;
  payment?: T;
  discount_total?: T;
  subtotal?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LineItems_select".
 */
export interface LineItemsSelect<T extends boolean = true> {
  lineItem?: T | LineItemSelect<T>;
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LineItem_select".
 */
export interface LineItemSelect<T extends boolean = true> {
  product?: T;
  isVariant?: T;
  variantOptions?:
    | T
    | {
        key?:
          | T
          | {
              slug?: T;
              label?: T;
            };
        value?:
          | T
          | {
              slug?: T;
              label?: T;
            };
        id?: T;
      };
  sku?: T;
  price?: T;
  quantity?: T;
  thumbnail?: T;
  url?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  orderNumber?: T;
  status?: T;
  orderedBy?: T;
  stripePaymentIntentID?: T;
  shippingRate?:
    | T
    | {
        displayName?: T;
        rate?: T;
      };
  total?: T;
  taxTotal?: T;
  currency?: T;
  lineItems?: T | LineItemsSelect<T>;
  paymentIntent?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  slug?: T;
  slugLock?: T;
  title?: T;
  description?: T;
  relatedProducts?: T;
  moreInfo?: T;
  publishedOn?: T;
  enableVariants?: T;
  baseProduct?:
    | T
    | {
        sku?: T;
        productActive?: T;
        soldOnline?: T;
        enableInventory?: T;
        inventory?: T;
        price?: T;
        images?:
          | T
          | {
              image?: T;
              id?: T;
            };
      };
  variants?:
    | T
    | {
        options?:
          | T
          | {
              label?: T;
              slug?: T;
              values?:
                | T
                | {
                    label?: T;
                    slug?: T;
                    id?: T;
                  };
              id?: T;
            };
        variantProducts?: T | ProductVariantSelect<T>;
      };
  brand?: T;
  collections?: T;
  categories?: T;
  compatibility?: T;
  priceMin?: T;
  priceMax?: T;
  reviews?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductVariant_select".
 */
export interface ProductVariantSelect<T extends boolean = true> {
  options?: T;
  sku?: T;
  price?: T;
  productActive?: T;
  soldOnline?: T;
  enableInventory?: T;
  inventory?: T;
  info?: T;
  images?:
    | T
    | {
        image?: T;
        id?: T;
      };
  id?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  slug?: T;
  slugLock?: T;
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        title?: T;
        subtitle?: T;
        size?: T;
        background?: T;
        media?: T;
        slides?:
          | T
          | {
              pretitle?: T;
              title?: T;
              description?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
              background?: T;
              id?: T;
            };
        autoplay?: T;
        delay?: T;
        fade?: T;
      };
  layout?:
    | T
    | {
        archive?: T | ArchiveBlockSelect<T>;
        banner?: T | BannerBlockSelect<T>;
        cta?: T | CallToActionBlockSelect<T>;
        code?: T | CodeBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        form?: T | FormBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        services?: T | ServicesBlockSelect<T>;
        testimonials?: T | TestimonialsBlockSelect<T>;
        contact?: T | ContactBlockSelect<T>;
        typography?: T | TypographyBlockSelect<T>;
        'latest-posts'?: T | LatestPostsBlockSelect<T>;
        card?: T | CardBlockSelect<T>;
        grid?:
          | T
          | {
              gridStyle?: T;
              columns?: T;
              gap?: T;
              content?:
                | T
                | {
                    contentType?: T;
                    richText?: T;
                    blocks?:
                      | T
                      | {
                          archive?: T | ArchiveBlockSelect<T>;
                          banner?: T | BannerBlockSelect<T>;
                          cta?: T | CallToActionBlockSelect<T>;
                          code?: T | CodeBlockSelect<T>;
                          mediaBlock?: T | MediaBlockSelect<T>;
                          typography?: T | TypographyBlockSelect<T>;
                          card?: T | CardBlockSelect<T>;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        'featured-spas'?:
          | T
          | {
              preTitle?: T;
              title?: T;
              body?: T;
              spas?: T;
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
              blockName?: T;
            };
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock_select".
 */
export interface BannerBlockSelect<T extends boolean = true> {
  style?: T;
  content?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock_select".
 */
export interface CodeBlockSelect<T extends boolean = true> {
  language?: T;
  code?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  gapX?: T;
  gapY?: T;
  columns?:
    | T
    | {
        type?: T;
        size?: T;
        height?: T;
        align?: T;
        enableLink?: T;
        enableBackgroundImage?: T;
        backgroundImage?: T;
        richText?: T;
        blocks?:
          | T
          | {
              archive?: T | ArchiveBlockSelect<T>;
              banner?: T | BannerBlockSelect<T>;
              cta?: T | CallToActionBlockSelect<T>;
              code?: T | CodeBlockSelect<T>;
              mediaBlock?: T | MediaBlockSelect<T>;
              typography?: T | TypographyBlockSelect<T>;
              card?: T | CardBlockSelect<T>;
              grid?:
                | T
                | {
                    gridStyle?: T;
                    columns?: T;
                    gap?: T;
                    content?:
                      | T
                      | {
                          contentType?: T;
                          richText?: T;
                          blocks?:
                            | T
                            | {
                                archive?: T | ArchiveBlockSelect<T>;
                                banner?: T | BannerBlockSelect<T>;
                                cta?: T | CallToActionBlockSelect<T>;
                                code?: T | CodeBlockSelect<T>;
                                mediaBlock?: T | MediaBlockSelect<T>;
                                typography?: T | TypographyBlockSelect<T>;
                                card?: T | CardBlockSelect<T>;
                              };
                          id?: T;
                        };
                    id?: T;
                    blockName?: T;
                  };
            };
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  position?: T;
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TypographyBlock_select".
 */
export interface TypographyBlockSelect<T extends boolean = true> {
  type?: T;
  enableLinks?: T;
  align?: T;
  title?: T;
  subTitle?: T;
  body?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  titleFontColor?: T;
  subtitleFontColor?: T;
  bodyFontColor?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CardBlock_select".
 */
export interface CardBlockSelect<T extends boolean = true> {
  type?: T;
  icon?: T;
  title?: T;
  description?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  enableIntro?: T;
  preTitle?: T;
  title?: T;
  body?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ServicesBlock_select".
 */
export interface ServicesBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  body?: T;
  link?:
    | T
    | {
        type?: T;
        newTab?: T;
        reference?: T;
        url?: T;
        label?: T;
        appearance?: T;
      };
  offerings?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialsBlock_select".
 */
export interface TestimonialsBlockSelect<T extends boolean = true> {
  title?: T;
  body?: T;
  link?:
    | T
    | {
        type?: T;
        newTab?: T;
        reference?: T;
        url?: T;
        label?: T;
        appearance?: T;
      };
  populateBy?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContactBlock_select".
 */
export interface ContactBlockSelect<T extends boolean = true> {
  title?: T;
  message?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LatestPostsBlock_select".
 */
export interface LatestPostsBlockSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  body?: T;
  link?:
    | T
    | {
        type?: T;
        newTab?: T;
        reference?: T;
        url?: T;
        label?: T;
        appearance?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-categories_select".
 */
export interface ProductCategoriesSelect<T extends boolean = true> {
  slug?: T;
  slugLock?: T;
  fullSlug?: T;
  title?: T;
  description?: T;
  parent?: T;
  isLeaf?: T;
  children?: T;
  products?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-collections_select".
 */
export interface ProductCollectionsSelect<T extends boolean = true> {
  slug?: T;
  slugLock?: T;
  title?: T;
  collectionType?: T;
  description?: T;
  priority?: T;
  startDate?: T;
  endDate?: T;
  publishedOn?: T;
  products?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands_select".
 */
export interface BrandsSelect<T extends boolean = true> {
  slug?: T;
  slugLock?: T;
  name?: T;
  products?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers_select".
 */
export interface CustomersSelect<T extends boolean = true> {
  email?: T;
  has_account?: T;
  account?: T;
  stripeCustomerID?: T;
  cart?: T;
  billing_addresses?:
    | T
    | {
        address?: T | AddressSelect<T>;
        id?: T;
      };
  shipping_addresses?:
    | T
    | {
        address?: T | AddressSelect<T>;
        id?: T;
      };
  orders?: T;
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Address_select".
 */
export interface AddressSelect<T extends boolean = true> {
  first_name?: T;
  last_name?: T;
  company?: T;
  line_1?: T;
  line_2?: T;
  city?: T;
  country?: T;
  state?: T;
  postal_code?: T;
  phone?: T;
  email?: T;
  metadata?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonials_select".
 */
export interface TestimonialsSelect<T extends boolean = true> {
  title?: T;
  content?: T;
  author?: T;
  rating?: T;
  date?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "spas_select".
 */
export interface SpasSelect<T extends boolean = true> {
  slug?: T;
  slugLock?: T;
  type?: T;
  hotTubCollection?: T;
  swimSpaCollection?: T;
  title?: T;
  startingPrice?: T;
  modelYear?: T;
  model?: T;
  description?: T;
  seatingDesign?: T;
  seating?: T;
  jets?: T;
  volume?: T;
  swimSystem?: T;
  sizeCategory?: T;
  energyEfficiency?: T;
  hydroGuide?: T;
  dimensions?: T;
  height?: T;
  weightFull?: T;
  weightEmpty?: T;
  swimArea?: T;
  jetPumps?: T;
  interiorLighting?: T;
  exteriorLighting?: T;
  waterFalls?: T;
  selfCleaning?: T;
  circulationPump?: T;
  automatedWellness?: T;
  pureWaterSystem?: T;
  ezZonePure?: T;
  oasisPackage?: T;
  hydroFlex?: T;
  iCommand?: T;
  northernFalls?: T;
  chromatherapy?: T;
  heater?: T;
  electrical?: T;
  warranty?: T;
  thumbnail?: T;
  topdown?: T;
  threeDModel?: T;
  detailsLink?: T;
  quoteLink?: T;
  financingLink?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "galleries_select".
 */
export interface GalleriesSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        type?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        title?: T;
        subtitle?: T;
        size?: T;
        background?: T;
        media?: T;
        slides?:
          | T
          | {
              pretitle?: T;
              title?: T;
              description?: T;
              links?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
              background?: T;
              id?: T;
            };
        autoplay?: T;
        delay?: T;
        fade?: T;
      };
  title?: T;
  subtitle?: T;
  description?: T;
  slug?: T;
  slugLock?: T;
  images?: T;
  showCaptions?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  submissionType?: T;
  firstName?: T;
  lastName?: T;
  email?: T;
  phone?: T;
  postalCode?: T;
  interestedIn?:
    | T
    | {
        value?: T;
        id?: T;
      };
  message?: T;
  subscribeToMailingList?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "shipping-options_select".
 */
export interface ShippingOptionsSelect<T extends boolean = true> {
  name?: T;
  type?: T;
  shippingRules?:
    | T
    | {
        baseRate?: T;
        freeShippingThreshold?: T;
        regions?:
          | T
          | {
              name?: T;
              postalCodePattern?: T;
              id?: T;
            };
      };
  pickupLocation?: T | AddressSelect<T>;
  isActive?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product-reviews_select".
 */
export interface ProductReviewsSelect<T extends boolean = true> {
  title?: T;
  rating?: T;
  review?: T;
  isVerifiedPurchase?: T;
  images?: T;
  reviewer?: T;
  product?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-settings".
 */
export interface Settings {
  id: number;
  productsPage?: (number | null) | Page;
  general?: {
    /**
     * Enter your app name
     */
    appName?: string | null;
    /**
     * Enter your app description
     */
    appDescription?: string | null;
  };
  admin?: {
    /**
     * Enter admin email to receive mails from users.
     */
    email?: string | null;
    /**
     * Enter admin phone number
     */
    phone_number?: number | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "shop-settings".
 */
export interface ShopSetting {
  id: number;
  currency?: ('USD' | 'EUR' | 'GBP') | null;
  paymentMethods?:
    | {
        name?: string | null;
        enabled?: boolean | null;
        id?: string | null;
      }[]
    | null;
  shippingMethods?:
    | {
        name?: string | null;
        enabled?: boolean | null;
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  site?: {
    items?:
      | {
          item: {
            label: string;
            isLink?: boolean | null;
            link?: {
              type?: ('reference' | 'custom') | null;
              reference?: {
                relationTo: 'pages';
                value: number | Page;
              } | null;
              url?: string | null;
              newTab?: boolean | null;
            };
            submenu?:
              | {
                  label: string;
                  isLink?: boolean | null;
                  link?: {
                    type?: ('reference' | 'custom') | null;
                    reference?: {
                      relationTo: 'pages';
                      value: number | Page;
                    } | null;
                    url?: string | null;
                    newTab?: boolean | null;
                  };
                  links?:
                    | {
                        label: string;
                        type?: ('reference' | 'custom') | null;
                        reference?: {
                          relationTo: 'pages';
                          value: number | Page;
                        } | null;
                        url?: string | null;
                        newTab?: boolean | null;
                        id?: string | null;
                      }[]
                    | null;
                  id?: string | null;
                }[]
              | null;
          };
          id?: string | null;
        }[]
      | null;
  };
  shop?: {
    items?:
      | {
          item: {
            label: string;
            isLink?: boolean | null;
            link?: {
              type?: ('reference' | 'custom') | null;
              reference?: {
                relationTo: 'pages';
                value: number | Page;
              } | null;
              url?: string | null;
              newTab?: boolean | null;
            };
            submenu?:
              | {
                  label: string;
                  isLink?: boolean | null;
                  link?: {
                    type?: ('reference' | 'custom') | null;
                    reference?: {
                      relationTo: 'pages';
                      value: number | Page;
                    } | null;
                    url?: string | null;
                    newTab?: boolean | null;
                  };
                  links?:
                    | {
                        label: string;
                        type?: ('reference' | 'custom') | null;
                        reference?: {
                          relationTo: 'pages';
                          value: number | Page;
                        } | null;
                        url?: string | null;
                        newTab?: boolean | null;
                        id?: string | null;
                      }[]
                    | null;
                  id?: string | null;
                }[]
              | null;
          };
          id?: string | null;
        }[]
      | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  siteFooter?: {
    navItems?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?: {
              relationTo: 'pages';
              value: number | Page;
            } | null;
            url?: string | null;
            label: string;
          };
          id?: string | null;
        }[]
      | null;
  };
  shopFooter?: {
    navItems?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?: {
              relationTo: 'pages';
              value: number | Page;
            } | null;
            url?: string | null;
            label: string;
          };
          id?: string | null;
        }[]
      | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "store-hours".
 */
export interface StoreHours {
  id: number;
  /**
   * Configure store hours for each day of the week
   */
  days: {
    dayOfWeek: 'Monday' | 'Tuesday' | 'Wednesday' | 'Thursday' | 'Friday' | 'Saturday' | 'Sunday';
    isClosed?: boolean | null;
    openTime?: string | null;
    openTime_tz: SupportedTimezones;
    closeTime?: string | null;
    closeTime_tz: SupportedTimezones;
    id?: string | null;
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-settings_select".
 */
export interface SiteSettingsSelect<T extends boolean = true> {
  productsPage?: T;
  general?:
    | T
    | {
        appName?: T;
        appDescription?: T;
      };
  admin?:
    | T
    | {
        email?: T;
        phone_number?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "shop-settings_select".
 */
export interface ShopSettingsSelect<T extends boolean = true> {
  currency?: T;
  paymentMethods?:
    | T
    | {
        name?: T;
        enabled?: T;
        id?: T;
      };
  shippingMethods?:
    | T
    | {
        name?: T;
        enabled?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  site?:
    | T
    | {
        items?:
          | T
          | {
              item?:
                | T
                | {
                    label?: T;
                    isLink?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          reference?: T;
                          url?: T;
                          newTab?: T;
                        };
                    submenu?:
                      | T
                      | {
                          label?: T;
                          isLink?: T;
                          link?:
                            | T
                            | {
                                type?: T;
                                reference?: T;
                                url?: T;
                                newTab?: T;
                              };
                          links?:
                            | T
                            | {
                                label?: T;
                                type?: T;
                                reference?: T;
                                url?: T;
                                newTab?: T;
                                id?: T;
                              };
                          id?: T;
                        };
                  };
              id?: T;
            };
      };
  shop?:
    | T
    | {
        items?:
          | T
          | {
              item?:
                | T
                | {
                    label?: T;
                    isLink?: T;
                    link?:
                      | T
                      | {
                          type?: T;
                          reference?: T;
                          url?: T;
                          newTab?: T;
                        };
                    submenu?:
                      | T
                      | {
                          label?: T;
                          isLink?: T;
                          link?:
                            | T
                            | {
                                type?: T;
                                reference?: T;
                                url?: T;
                                newTab?: T;
                              };
                          links?:
                            | T
                            | {
                                label?: T;
                                type?: T;
                                reference?: T;
                                url?: T;
                                newTab?: T;
                                id?: T;
                              };
                          id?: T;
                        };
                  };
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  siteFooter?:
    | T
    | {
        navItems?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                  };
              id?: T;
            };
      };
  shopFooter?:
    | T
    | {
        navItems?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                  };
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "store-hours_select".
 */
export interface StoreHoursSelect<T extends boolean = true> {
  days?:
    | T
    | {
        dayOfWeek?: T;
        isClosed?: T;
        openTime?: T;
        openTime_tz?: T;
        closeTime?: T;
        closeTime_tz?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}